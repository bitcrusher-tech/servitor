on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Deep Recon Pipeline"]
    types: [completed]

jobs:
  vuln-scan:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Install scanners
        run: |
          set -x
          go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest
          go install -v github.com/ffuf/ffuf@latest
          go install -v github.com/hahwul/dalfox/v2@latest
          echo "${HOME}/go/bin" >> "$GITHUB_PATH"

      # When triggered by recon finishing, pull that exact run's artifact
      - name: Download recon artifacts (from triggering recon run)
        if: ${{ github.event_name == 'workflow_run' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          name: recon-data
          path: recon_artifacts
          if_no_artifact_found: error

      # When run manually, pull the latest successful recon artifact on this branch
      - name: Download recon artifacts (latest successful on this branch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: Deep Recon Pipeline
          workflow_conclusion: success
          branch: ${{ github.ref_name }}
          name: recon-data
          path: recon_artifacts
          if_no_artifact_found: error

      - name: Show what we got
        run: |
          echo "Artifacts directory:"
          ls -la recon_artifacts
          echo "--- live_hosts.txt (top 20) ---"
          sed -n '1,20p' recon_artifacts/live_hosts.txt || true
          echo "--- all_endpoints.txt (top 20) ---"
          sed -n '1,20p' recon_artifacts/all_endpoints.txt || true
